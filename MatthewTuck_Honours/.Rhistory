library(here)
dowload.packages(here)
download.packages(here)
download.packages("here")
install.packages("here")
library(here)
install.packages("rfishbase")
cetaceans <- c("Balaena mysticetus", "Balaenoptera acutorostrata", "Balaenoptera bonaerensis", "Balaenoptera_borealis",
"Balaenoptera edeni",
"Balaenoptera musculus",
"Balaenoptera omurai",
"Balaenoptera physalus",
"Balaenoptera ricei",
"Berardius arnuxii",
"Berardius bairdii",
"Berardius minimus",
"Caperea marginata",
"Cephalorhynchus commersonii",
"Cephalorhynchus eutropia",
"Cephalorhynchus heavisidii",
"Cephalorhynchus hectori",
"Delphinapterus leucas",
"Delphinus delphis",
"Eschrichtius robustus",
"Eubalaena australis",
"Eubalaena glacialis",
"Eubalaena japonica",
"Feresa attenuata",
"Globicephala macrorhynchus",
"Globicephala melas",
"Grampus griseus",
"Hyperoodon ampullatus",
"Hyperoodon planifrons",
"Indopacetus pacificus",
"Kogia breviceps",
"Kogia sima",
"Lagenodelphis hosei",
"Lagenorhynchus acutus",
"Lagenorhynchus albirostris",
"Lagenorhynchus australis",
"Lagenorhynchus cruciger",
"Lagenorhynchus obscurus",
"Lissodelphis borealis",
"Lissodelphis peronii",
"Megaptera novaeangliae",
"Mesoplodon bidens",
"Mesoplodon bowdoini",
"Mesoplodon carlhubbsi",
"Mesoplodon densirostris",
"Mesoplodon eueu",
"Mesoplodon europaeus",
"Mesoplodon ginkgodens",
"Mesoplodon grayi",
"Mesoplodon hectori",
"Mesoplodon hotaula",
"Mesoplodon layardii",
"Mesoplodon mirus",
"Mesoplodon perrini",
"Mesoplodon peruvianus",
"Mesoplodon stejnegeri",
"Mesoplodon traversii",
"Monodon monoceros",
"Neophocaena asiaeorientalis",
"Neophocaena phocaenoides",
"Orcaella brevirostris",
"Orcaella heinsohni",
"Orcinus orca",
"Peponocephala electra",
"Phocoena dioptrica",
"Phocoena phocoena",
"Phocoena sinus",
"Phocoena spinipinnis",
"Phocoenoides dalli",
"Physeter macrocephalus",
"Pontoporia blainvillei",
"Pseudorca crassidens",
"Sagmatias obliquidens",
"Sotalia guianensis",
"Sousa chinensis",
"Sousa plumbea",
"Sousa sahulensis",
"Sousa teuszii",
"Stenella attenuata",
"Stenella clymene",
"Stenella coeruleoalba",
"Stenella frontalis",
"Stenella longirostris",
"Steno bredanensis",
"Tasmacetus shepherdi",
"Tursiops aduncus",
"Tursiops truncatus",
"Ziphius cavirostris")
fb_tbl("species") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname, morphology,length_length, ecology, ecosystem, diet)
library("rfishbase")
library("dplyr")
cetaceans <- c("Balaena mysticetus", "Balaenoptera acutorostrata", "Balaenoptera bonaerensis", "Balaenoptera_borealis",
"Balaenoptera edeni",
"Balaenoptera musculus",
"Balaenoptera omurai",
"Balaenoptera physalus",
"Balaenoptera ricei",
"Berardius arnuxii",
"Berardius bairdii",
"Berardius minimus",
"Caperea marginata",
"Cephalorhynchus commersonii",
"Cephalorhynchus eutropia",
"Cephalorhynchus heavisidii",
"Cephalorhynchus hectori",
"Delphinapterus leucas",
"Delphinus delphis",
"Eschrichtius robustus",
"Eubalaena australis",
"Eubalaena glacialis",
"Eubalaena japonica",
"Feresa attenuata",
"Globicephala macrorhynchus",
"Globicephala melas",
"Grampus griseus",
"Hyperoodon ampullatus",
"Hyperoodon planifrons",
"Indopacetus pacificus",
"Kogia breviceps",
"Kogia sima",
"Lagenodelphis hosei",
"Lagenorhynchus acutus",
"Lagenorhynchus albirostris",
"Lagenorhynchus australis",
"Lagenorhynchus cruciger",
"Lagenorhynchus obscurus",
"Lissodelphis borealis",
"Lissodelphis peronii",
"Megaptera novaeangliae",
"Mesoplodon bidens",
"Mesoplodon bowdoini",
"Mesoplodon carlhubbsi",
"Mesoplodon densirostris",
"Mesoplodon eueu",
"Mesoplodon europaeus",
"Mesoplodon ginkgodens",
"Mesoplodon grayi",
"Mesoplodon hectori",
"Mesoplodon hotaula",
"Mesoplodon layardii",
"Mesoplodon mirus",
"Mesoplodon perrini",
"Mesoplodon peruvianus",
"Mesoplodon stejnegeri",
"Mesoplodon traversii",
"Monodon monoceros",
"Neophocaena asiaeorientalis",
"Neophocaena phocaenoides",
"Orcaella brevirostris",
"Orcaella heinsohni",
"Orcinus orca",
"Peponocephala electra",
"Phocoena dioptrica",
"Phocoena phocoena",
"Phocoena sinus",
"Phocoena spinipinnis",
"Phocoenoides dalli",
"Physeter macrocephalus",
"Pontoporia blainvillei",
"Pseudorca crassidens",
"Sagmatias obliquidens",
"Sotalia guianensis",
"Sousa chinensis",
"Sousa plumbea",
"Sousa sahulensis",
"Sousa teuszii",
"Stenella attenuata",
"Stenella clymene",
"Stenella coeruleoalba",
"Stenella frontalis",
"Stenella longirostris",
"Steno bredanensis",
"Tasmacetus shepherdi",
"Tursiops aduncus",
"Tursiops truncatus",
"Ziphius cavirostris")
fb_tbl("species") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname, morphology,length_length, ecology, ecosystem, diet)
fb_tbl("species", "sealifebase") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname, morphology,length_length, ecology, ecosystem, diet)
rlang::last_trace()
fb_tbl("species", "ecology", "ecosystem","diet", "morphology") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname,length_length, ecology, ecosystem, diet)
fb_tbl("species", "ecology", "ecosystem","diet", "morphology", "sealifebase") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname,length_length, ecology, ecosystem, diet)
fb_tbl("species", "ecology", "ecosystem","diet", "morphology", "sealifebase") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname,length_length, ecology, ecosystem, diet)
fb_tbl("species, ecology, ecosystem, diet, morphology", "sealifebase") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname,length_length, ecology, ecosystem, diet)
fb_tbl("species", "sealifebase") %>%
mutate(sci_name = paste(Genus, Species)) %>%
filter(sci_name %in% cetaceans) %>%
select(sci_name, FBname)
fb_tables("sealifebase")
fb_tbl("species", "sealifebase") %>%
filter(sci_name %in% cetaceans) %>%
fb_tbl("species", "sealifebase") %>%
species_list<-fb_tbl("species", "sealifebase")%>%
version = "latest"%>%
db = NULL%>%
collect = TRUE
species_list<-fb_tbl("species", "sealifebase")%>%
version = "latest"%>%
db = NULL%>%
species_list<-fb_tbl("species", "sealifebase")
setwd("C:/Users/rugby/Downloads/Joan's code example")
install.packages("mFD")
setwd("C:/Users/rugby/Downloads/Joan's code example")
install.packages("mFD")
setwd("C:/Users/rugby/Downloads/Joan's code example")
install.packages("mFD")
install.packages("vegan")
install.packages("betapart")
install.packages("picante")
install.packages("abind")
# Load R packages
library("mFD") # functional trait analyses
library("vegan") # species diversity analyses
library("betapart") # functional B-diversity
library("picante") # null models
library("abind") # arrays
sfDVent_sp <- read.csv("sfDVent_sp_JA.csv") # Import sfDVent_sp_JA.csv dataset
sp_comm <- as.data.frame(t(sfDVent_sp[,c(7:23)])) # species occurrences data
View(sp_comm)
sp_traits <- sfDVent_sp[,c(1:6)] # species traits data
View(sp_traits)
View(sp_comm)
sp_comm <- as.data.frame(t(sfDVent_sp[,c(8:23)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
View(sp_comm)
View(sp_traits)
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("O","O","N","O","O","N")) # Trait info data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
View(trait_info)
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
View(sp_comm_hc)
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
abline(v = 0, h = 0.75, col ="red", lty = 2) # Dissimilarity threshold set at 75
points(x = c(1:17), y = rep(0,17), pch = 19, cex = 1.5,
col = c("#b989f0","#FFA500","#753232", "#753232", "#CD2626","#CD2626","#CD2626",
"#c95fa4", "#3acd88", "#3A5FCD", "#3A5FCD", "#d1cb54","#242323", "#54cfd1",
"#03520c", "#03520c","#03520c")) # Add point and color to highlight different vent biogeoprovinces
# Regroup by region
prov <- c("IndR", "ESR", "EPR", "GoC", "JdF", "Kerm", "SWP", "SWP","Izu-Mar",
"MohR", "EPR", "MAR", "SWP", "Okin", "EPR", "MAR", "IndR") # to add as column for re-classification of vents
sp_comm$Province <- prov # add column province
sp_comm <- as.data.frame(t(sfDVent_sp[,c(7:23)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
sp_comm <- as.data.frame(t(sfDVent_sp[,c(8:23)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
abline(v = 0, h = 0.75, col ="red", lty = 2) # Dissimilarity threshold set at 75
points(x = c(1:17), y = rep(0,17), pch = 19, cex = 1.5,
col = c("#b989f0","#FFA500","#753232", "#753232", "#CD2626","#CD2626","#CD2626",
"#c95fa4", "#3acd88", "#3A5FCD", "#3A5FCD", "#d1cb54","#242323", "#54cfd1",
"#03520c", "#03520c","#03520c")) # Add point and color to highlight different vent biogeoprovinces
sp_comm <- as.data.frame(t(sfDVent_sp[,c(8:24)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
sp_comm$Province <- prov # add column province
sp_comm_biog = sapply(sp_comm[-512], tapply, INDEX = sp_comm$Province, sum) # create new table with species classified in bioprovinces
sp_comm <- sp_comm[,-512] # delete column of provinces
View(sp_comm)
View(sp_comm_biog)
sp_comm_biog <- decostand(sp_comm_biog, "pa") # presence/abscense transformation (1/0)
View(sp_comm_biog)
# Functional distance between species
func_dist_sp <- funct.dist(sp_traits,
tr_cat = trait_info,
metric = "gower",
ordinal_var = "metric",
weight_type = "equal") # Functional dissimilarity (Gower) distance between species
help("funct.dist")
View(trait_info)
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c(,"O","O","N","O","O","N")) # Trait info data
help(trait_type)
help("data.frame")
sp_comm <- as.data.frame(t(sfDVent_sp[,c(8:24)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(2:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("O","O","N","O","O","N")) # Trait info data
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("NULL","O","O","N","O","O","N")) # Trait info data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
sp_traits$Relative.Adult.Mobility <- as.ordered(sp_traits$Relative.Adult.Mobility) # Mobility as an ordered trait
sp_traits$Estimated.Max.Body.Size <- as.ordered(sp_traits$Estimated.Max.Body.Size) # Size as an ordered trait
sp_traits$Habitat.Complexity <- as.factor(sp_traits$Habitat.Complexity) # Habitat Complexity as a factor trait
sp_traits$Chemosynthesis.Obligate <- as.ordered(sp_traits$Chemosynthesis.Obligate) # Chemo Obligate as an ordered trait
sp_traits$Zonation.From.Vent <- ordered(sp_traits$Zonation.From.Vent, levels = c("Low", "Medium", "High")) # Zonation as an ordered trait and reorder levels
sp_traits$Feeding.Mode <- as.factor(sp_traits$Feeding.Mode) # Feeding as a factor trait
sp_dist <- betadiver(sp_comm, method = "sim") # Sorensen dissimilarity of species
sp_comm_hc <- hclust(sp_dist, method = "average") # Cluster analysis using the algorithm
plot(sp_comm_hc, hang = -1, main = "Vent biogeographical regions", ylab= "", xlab= "") # Plot dendogram
abline(v = 0, h = 0.75, col ="red", lty = 2) # Dissimilarity threshold set at 75
points(x = c(1:17), y = rep(0,17), pch = 19, cex = 1.5,
col = c("#b989f0","#FFA500","#753232", "#753232", "#CD2626","#CD2626","#CD2626",
"#c95fa4", "#3acd88", "#3A5FCD", "#3A5FCD", "#d1cb54","#242323", "#54cfd1",
"#03520c", "#03520c","#03520c")) # Add point and color to highlight different vent biogeoprovinces
# Regroup by region
prov <- c("IndR", "ESR", "EPR", "GoC", "JdF", "Kerm", "SWP", "SWP","Izu-Mar",
"MohR", "EPR", "MAR", "SWP", "Okin", "EPR", "MAR", "IndR") # to add as column for re-classification of vents
sp_comm$Province <- prov # add column province
sp_comm_biog = sapply(sp_comm[-512], tapply, INDEX = sp_comm$Province, sum) # create new table with species classified in bioprovinces
sp_comm <- sp_comm[,-512] # delete column of provinces
sp_comm_biog <- decostand(sp_comm_biog, "pa") # presence/abscense transformation (1/0)
# Functional distance between species
func_dist_sp <- funct.dist(sp_traits,
tr_cat = trait_info,
metric = "gower",
ordinal_var = "metric",
weight_type = "equal") # Functional dissimilarity (Gower) distance between species
help("funct.dist")
sp_traits$Species<-as.factor(sp_traits$Species)
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("N","O","O","N","O","O","N")) # Trait info data
# Functional distance between species
func_dist_sp <- funct.dist(sp_traits,
tr_cat = trait_info,
metric = "gower",
ordinal_var = "metric",
weight_type = "equal") # Functional dissimilarity (Gower) distance between species
sfDVent_sp <- read.csv() # Import sfDVent_sp_JA.csv dataset
sp_comm <- as.data.frame(t(sfDVent_sp[,c(8:24)])) # species occurrences data
sp_traits <- sfDVent_sp[,c(1:7)] # species traits data
trait_info <- data.frame(trait_name = colnames(sp_traits), trait_type = c("O","O","O","N","O","O","N")) # Trait info data
sfDVent_sp <- read.csv(sfDVent_sp_JA.csv) # Import sfDVent_sp_JA.csv dataset
setwd("C:/Users/rugby/Downloads/Joan's code example")
sfDVent_sp <- read.csv(sfDVent_sp_JA.csv) # Import sfDVent_sp_JA.csv dataset
setwd("C:/Users/rugby/Downloads/Joan's code example")
sfDVent_sp <- read.csv(sfDVent_sp_JA.csv) # Import sfDVent_sp_JA.csv dataset
sfDVent_sp <- read.csv(sfDVent_sp_JA.csv) # Import sfDVent_sp_JA.csv dataset
